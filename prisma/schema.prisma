// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// ユーザー登録等に使用されたアカウントそれぞれに紐づく情報
/// 基本取得・変更はしない方針
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

/// 認証時に使用されるセッション情報
/// 基本取得・変更はしない
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

/// 各ユーザーの情報
/// 基本取得・変更はしない
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  userDataId String?   @unique
  userData   UserData? @relation(fields: [userDataId], references: [databaseId])
}

/// 認証用トークン
/// 基本取得・変更はしない
model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/// ユーザーの情報（実際に取得・変更する用）
model UserData {
  /// データベース上のID。基本使わない。
  databaseId String  @id @default(cuid()) @map("id")
  /// 各ユーザーが任意につけられるかつUniqueなID
  userId     String  @unique
  /// 各ユーザーの表示名
  name       String
  /// 各ユーザーのプロフィールページの内容
  bio        String?
  /// 各ユーザーemailアドレス
  email      String? @unique
  /// ユーザーのアイコン画像のURL
  iconUrl    String?

  /// Admin権限の有無
  /// クライアント側からの変更禁止
  isAdmin Boolean @default(false)

  /// nextauth用データ構造と紐づける用。公開しない
  /// 本来はrequiredだがPrismaの仕様上無理
  authUser User?
}
